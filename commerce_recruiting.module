<?php

/**
 * @file
 * Contains commerce_recruiting.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_theme().
 */
function commerce_recruiting_theme($existing, $type, $theme, $path) {
  $theme = [];
  $theme['friend_share_block'] = [
    'path' => $path . '/templates',
    'template'  => 'friend-share-block',
    'variables' => [
      'share_link' => NULL,
      'block_headline' => NULL,
      'block_description' => NULL,
      'option' => NULL,
    ],
  ];
  $theme['recruiter_campaigns'] = [
    'path' => $path . '/templates',
    'template'  => 'recruiter-campaigns',
    'variables' => [
      'campaigns' => [],
    ],
  ];
  $theme['recruitment_summary'] = [
    'path' => $path . '/templates',
    'template'  => 'recruitment-summary',
    'variables' => [
      'summaries' => [],
    ],
  ];
  $theme['recruitment_rewards'] = [
    'path' => $path . '/templates',
    'template'  => 'recruitment-rewards',
    'variables' => [
      'rewards' => [],
    ],
  ];
  $theme['recruitment'] = [
    'render element' => 'elements',
    'file' => 'commerce_recruiting.page.inc',
    'template' => 'recruitment',
  ];
  $theme['recruitment_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'commerce_recruiting.page.inc',
  ];
  return $theme;
}

/**
 * Implements hook_cron().
 */
function commerce_recruiting_cron() {
  \Drupal::service('commerce_recruiting.recruitment_manager')->applyTransitions('accept');
}

/**
 * Implements hook_entity_base_field_info().
 */
function commerce_recruiting_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() == 'user') {
    $fields['code'] = BaseFieldDefinition::create('string')
      ->setLabel(new TranslatableMarkup('Code'))
      ->setDescription(new TranslatableMarkup('Your personal recommendation code.'))
      ->setTranslatable(FALSE)
      ->setSettings([
        'default_value' => '',
        'max_length' => 50,
      ])
      ->setDisplayOptions('form', [
        'type' => 'string_textfield',
        'weight' => 1,
      ])
      ->setDisplayConfigurable('view', TRUE)
      ->setDisplayConfigurable('form', TRUE)
      // ->setDefaultValueCallback('Drupal\commerce_recruiting\Entity\CampaignOption::getDefaultCode')
      ->addConstraint('CodeUnique');

    return $fields;
  }
}
